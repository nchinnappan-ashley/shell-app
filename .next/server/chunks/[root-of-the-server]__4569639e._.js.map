{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/NChinnappan/SourceAI/UI/shell-app/src/app/api/news/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nexport const runtime = 'nodejs';\n\nfunction stripHtml(html: string): string {\n  return html\n    .replace(/<script[\\s\\S]*?<\\/script>/gi, '')\n    .replace(/<style[\\s\\S]*?<\\/style>/gi, '')\n    .replace(/<[^>]+>/g, ' ')\n    .replace(/&nbsp;/g, ' ')\n    .replace(/&amp;/g, '&')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/\\s{2,}/g, ' ')\n    .trim();\n}\n\n// Very lightweight HTML extraction tailored for WordPress-like news listing pages\nfunction parseNews(html: string, baseUrl: string) {\n  const out: { id: string; title: string; summary: string; date: string; href?: string; image?: string; tag?: string }[] = [];\n\n  // Split by article-like containers\n  const parts = html.split(/<article\\b/gi).slice(1);\n  for (const p of parts) {\n    const block = '<article ' + p.split(/<\\/article>/i)[0];\n\n    const hrefMatch = block.match(/<a[^>]+href=[\"']([^\"']+)[\"'][^>]*>(?:\\s*<img|\\s*<h2|\\s*<span|\\s*<div)/i);\n    const href = hrefMatch ? new URL(hrefMatch[1], baseUrl).toString() : undefined;\n\n    const titleRaw = (block.match(/<h2[^>]*>([\\s\\S]*?)<\\/h2>/i)?.[1]\n      || block.match(/<h3[^>]*>([\\s\\S]*?)<\\/h3>/i)?.[1]\n      || '').trim();\n    const title = stripHtml(titleRaw).slice(0, 180);\n\n    const imgMatch = block.match(/<img[^>]+(?:data-src|src)=[\"']([^\"']+)[\"'][^>]*>/i);\n    const image = imgMatch ? new URL(imgMatch[1], baseUrl).toString() : undefined;\n\n    const dateAttr = block.match(/<time[^>]+datetime=[\"']([^\"']+)[\"']/i)?.[1]\n      || block.match(/class=[\"'][^\"']*(?:date|time|entry-date|published)[^\"']*[\"'][^>]*>([\\s\\S]*?)<\\/time>/i)?.[1]\n      || '';\n    const dateText = dateAttr ? stripHtml(dateAttr) : '';\n\n    const paraRaw = (block.match(/<p[^>]*>([\\s\\S]*?)<\\/p>/i)?.[1] || '').trim();\n    const summary = stripHtml(paraRaw).slice(0, 220);\n\n    const catRaw = (block.match(/<a[^>]+rel=[\"']category[\"'][^>]*>([\\s\\S]*?)<\\/a>/i)?.[1] || '').trim();\n    const tag = stripHtml(catRaw).slice(0, 40) || undefined;\n\n    if (title || summary) {\n      const id = href || image || title || Math.random().toString(36).slice(2);\n      out.push({ id, title: title || summary, summary, date: dateText || '', href, image, tag });\n    }\n  }\n\n  // Fallback: if no <article>, try list items with class post\n  if (!out.length) {\n    const liParts = html.split(/<li[^>]+class=[\"'][^\"']*(?:post|news)[^\"']*[\"'][^>]*>/gi).slice(1);\n    for (const raw of liParts) {\n      const block = '<li ' + raw.split(/<\\/li>/i)[0];\n      const href = block.match(/<a[^>]+href=[\"']([^\"']+)[\"']/i)?.[1];\n      const title = stripHtml(block.match(/<a[^>]*>([\\s\\S]*?)<\\/a>/i)?.[1] || '').slice(0, 180);\n      const image = block.match(/<img[^>]+(?:data-src|src)=[\"']([^\"']+)[\"']/i)?.[1];\n      const summary = stripHtml(block.match(/<p[^>]*>([\\s\\S]*?)<\\/p>/i)?.[1] || '').slice(0, 220);\n      if (title || summary) out.push({ id: href || image || title, title, summary, date: '', href, image });\n    }\n  }\n\n  // Limit\n  return out.slice(0, 16);\n}\n\nexport async function GET(req: NextRequest) {\n  try {\n    const url = req.nextUrl.searchParams.get('url') || 'https://ashley.biz/news/';\n    const res = await fetch(url, { headers: { 'User-Agent': 'Ashley-AI-News/1.0' }, cache: 'no-store' });\n    if (!res.ok) throw new Error(`Failed to fetch ${url}: ${res.status}`);\n    const html = await res.text();\n    const items = parseNews(html, url);\n    return NextResponse.json({ ok: true, items });\n  } catch (e: unknown) {\n    const msg = e instanceof Error ? e.message : String(e);\n    return NextResponse.json({ ok: false, error: msg, items: [] }, { status: 200 });\n  }\n}\n\n"],"names":[],"mappings":";;;;;;AAAA;;AAEO,MAAM,UAAU;AAEvB,SAAS,UAAU,IAAY;IAC7B,OAAO,KACJ,OAAO,CAAC,+BAA+B,IACvC,OAAO,CAAC,6BAA6B,IACrC,OAAO,CAAC,YAAY,KACpB,OAAO,CAAC,WAAW,KACnB,OAAO,CAAC,UAAU,KAClB,OAAO,CAAC,SAAS,KACjB,OAAO,CAAC,SAAS,KACjB,OAAO,CAAC,WAAW,KACnB,IAAI;AACT;AAEA,kFAAkF;AAClF,SAAS,UAAU,IAAY,EAAE,OAAe;IAC9C,MAAM,MAAmH,EAAE;IAE3H,mCAAmC;IACnC,MAAM,QAAQ,KAAK,KAAK,CAAC,gBAAgB,KAAK,CAAC;IAC/C,KAAK,MAAM,KAAK,MAAO;QACrB,MAAM,QAAQ,cAAc,EAAE,KAAK,CAAC,eAAe,CAAC,EAAE;QAEtD,MAAM,YAAY,MAAM,KAAK,CAAC;QAC9B,MAAM,OAAO,YAAY,IAAI,IAAI,SAAS,CAAC,EAAE,EAAE,SAAS,QAAQ,KAAK;QAErE,MAAM,WAAW,CAAC,MAAM,KAAK,CAAC,+BAA+B,CAAC,EAAE,IAC3D,MAAM,KAAK,CAAC,+BAA+B,CAAC,EAAE,IAC9C,EAAE,EAAE,IAAI;QACb,MAAM,QAAQ,UAAU,UAAU,KAAK,CAAC,GAAG;QAE3C,MAAM,WAAW,MAAM,KAAK,CAAC;QAC7B,MAAM,QAAQ,WAAW,IAAI,IAAI,QAAQ,CAAC,EAAE,EAAE,SAAS,QAAQ,KAAK;QAEpE,MAAM,WAAW,MAAM,KAAK,CAAC,yCAAyC,CAAC,EAAE,IACpE,MAAM,KAAK,CAAC,0FAA0F,CAAC,EAAE,IACzG;QACL,MAAM,WAAW,WAAW,UAAU,YAAY;QAElD,MAAM,UAAU,CAAC,MAAM,KAAK,CAAC,6BAA6B,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI;QACzE,MAAM,UAAU,UAAU,SAAS,KAAK,CAAC,GAAG;QAE5C,MAAM,SAAS,CAAC,MAAM,KAAK,CAAC,sDAAsD,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI;QACjG,MAAM,MAAM,UAAU,QAAQ,KAAK,CAAC,GAAG,OAAO;QAE9C,IAAI,SAAS,SAAS;YACpB,MAAM,KAAK,QAAQ,SAAS,SAAS,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC;YACtE,IAAI,IAAI,CAAC;gBAAE;gBAAI,OAAO,SAAS;gBAAS;gBAAS,MAAM,YAAY;gBAAI;gBAAM;gBAAO;YAAI;QAC1F;IACF;IAEA,4DAA4D;IAC5D,IAAI,CAAC,IAAI,MAAM,EAAE;QACf,MAAM,UAAU,KAAK,KAAK,CAAC,2DAA2D,KAAK,CAAC;QAC5F,KAAK,MAAM,OAAO,QAAS;YACzB,MAAM,QAAQ,SAAS,IAAI,KAAK,CAAC,UAAU,CAAC,EAAE;YAC9C,MAAM,OAAO,MAAM,KAAK,CAAC,kCAAkC,CAAC,EAAE;YAC9D,MAAM,QAAQ,UAAU,MAAM,KAAK,CAAC,6BAA6B,CAAC,EAAE,IAAI,IAAI,KAAK,CAAC,GAAG;YACrF,MAAM,QAAQ,MAAM,KAAK,CAAC,gDAAgD,CAAC,EAAE;YAC7E,MAAM,UAAU,UAAU,MAAM,KAAK,CAAC,6BAA6B,CAAC,EAAE,IAAI,IAAI,KAAK,CAAC,GAAG;YACvF,IAAI,SAAS,SAAS,IAAI,IAAI,CAAC;gBAAE,IAAI,QAAQ,SAAS;gBAAO;gBAAO;gBAAS,MAAM;gBAAI;gBAAM;YAAM;QACrG;IACF;IAEA,QAAQ;IACR,OAAO,IAAI,KAAK,CAAC,GAAG;AACtB;AAEO,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM,MAAM,IAAI,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU;QACnD,MAAM,MAAM,MAAM,MAAM,KAAK;YAAE,SAAS;gBAAE,cAAc;YAAqB;YAAG,OAAO;QAAW;QAClG,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE,IAAI,EAAE,EAAE,IAAI,MAAM,EAAE;QACpE,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,QAAQ,UAAU,MAAM;QAC9B,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,IAAI;YAAM;QAAM;IAC7C,EAAE,OAAO,GAAY;QACnB,MAAM,MAAM,aAAa,QAAQ,EAAE,OAAO,GAAG,OAAO;QACpD,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,IAAI;YAAO,OAAO;YAAK,OAAO,EAAE;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACF","debugId":null}}]
}